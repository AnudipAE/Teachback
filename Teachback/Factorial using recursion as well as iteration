- Factorial using recursion.
package Example;

public class EmployeeBonusRecursion {

    // Recursive function to calculate factorial
    public static int factorial(int n) {
        if (n == 0 || n == 1) {
            return 1;  // Base case: factorial of 0 and 1 is 1
        }
        return n * factorial(n - 1);  // Recursive case: n! = n * (n-1)!
    }

    // Function to calculate bonus based on completed projects
    public static int calculateBonus(int projectsCompleted) {
        return factorial(projectsCompleted);  // Calculate factorial as bonus
    }

    public static void main(String[] args) {
        int projectsCompleted = 3;
        int bonus = calculateBonus(projectsCompleted);
        
        // Display the calculated bonus
        System.out.println("Bonus for completing " + projectsCompleted + " projects: " + bonus);
    }
}


- Factorial using iteration.

package Example;

public class EmployeeBonusIteration {

    // Iterative function to calculate factorial
    public static int factorial(int n) {
        int result = 1;
        for (int i = 1; i <= n; i++) {
            result *= i;  // Multiply result by the current number
        }
        return result;
    }

    // Function to calculate bonus based on completed projects
    public static int calculateBonus(int projectsCompleted) {
        return factorial(projectsCompleted);  // Calculate factorial as bonus
    }

    public static void main(String[] args) {
        int projectsCompleted = 3;
        int bonus = calculateBonus(projectsCompleted);
        
        // Display the calculated bonus
        System.out.println("Bonus for completing " + projectsCompleted + " projects: " + bonus);
    }
}


